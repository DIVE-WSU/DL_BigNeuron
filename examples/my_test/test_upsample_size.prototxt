layer {
  name: "data"
  type: "PatchData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  patch_sampler_param{
	   data_patch_shape{
		dim: 224
		dim: 224
		dim: 8
	   }
	   label_patch_shape{
		dim: 224
		dim: 224
		dim: 8
	   }
	   batch_size: 1
	   patches_per_data_batch: 899999
	   #data_source_batch_size: 1

 }
 
label_select_param{
	balance: true
	num_labels: 3
	num_top_label_balance: 2
	reorder_label: false
	class_prob_mapping_file: 'label_class_selection.prototxt'
}
  transform_nd_param{
    mirror: false
    padding: true
    pad_method: ZERO
  }
  data_provider_param{
    # Specify the data source.
    backend: HDF5
    batch_size: 1
    hdf5_file_shuffle: true
    data_source: "hdf5_train_file_list.txt"
  }

}


layer {
  name: "data"
  type: "PatchData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  patch_sampler_param{
	   data_patch_shape{
		dim: 224
		dim: 224
		dim: 8
	   }
	   label_patch_shape{
		dim: 224
		dim: 224
		dim: 8
	   }
	   batch_size: 1
	   patches_per_data_batch: 899999
	   #data_source_batch_size: 1
 }
 
 label_select_param{
			   balance: true
			   num_labels: 3
			   num_top_label_balance: 2
			   reorder_label: false
			   class_prob_mapping_file: 'label_class_selection_valid.prototxt'
		}
  transform_nd_param{
    mirror: false
    padding: true
    pad_method: ZERO
  }
  data_provider_param{
    # Specify the data source.
    backend: HDF5
    batch_size: 2
    hdf5_file_shuffle: true
    data_source: "hdf5_test_file_list.txt"
  }

}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 64
    kernel_size: 7
	kernel_size: 7
	kernel_size: 4
    stride: 2
	stride: 2
	stride: 1
	pad:3
	pad:3
	pad:0
  }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_shape: 3 kernel_shape: kernel_shape: 3
    stride_shape: 2 stride_shape: 2 stride_shape: 2
  }
}



#------------------------------------------- conv2x-------------------------------------
#---------------con2x_top-------------

layer {
  name: "conv2x_top"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2x_top"
  convolution_param {
    num_output: 256
    kernel_size: 1
  }
}

#------------------- conv3_x_-----------------------
layer {
  name: "conv3x_top"
  type: "Convolution"
  bottom: "conv2x_3_sum"
  top: "conv2x_top"
  convolution_param {
    num_output: 512
    kernel_size: 3
	kernel_size: 3
	kernel_size: 1
	stride :2
	stride :2
	stride :1
	pad :1
	pad :1
	pad :0
    weight_filler {
      type: "gaussian"
	  std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
#------------------- conv4_x_-----------------------

layer {
  name: "conv4x_top"
  type: "Convolution"
  bottom: "conv3x_top"
  top: "conv4x_top"
  convolution_param {
    num_output: 1024
    kernel_size: 3
	kernel_size: 3
	kernel_size: 1
	stride :2
	stride :2
	stride :1
	pad :1
	pad :1
	pad :0
  }
}
#------------------- conv5_x_-----------------------

layer {
  name: "conv5x_top"
  type: "Convolution"
  bottom: "conv4x_top"
  top: "conv5x_top"
  convolution_param {
    num_output: 2048
    kernel_size: 3
	kernel_size: 3
	kernel_size: 1
	stride :2
	stride :2
	stride :1
	pad :1
	pad :1
	pad :0
  }
}

#------------------------------deconv-------------------


layer{
 name: "deconv1_1x"
  type: "Convolution"
   bottom: "conv2x_top"
   top: "deconv1_1x"
  param {
     lr_mult: 20
  }
  param {
     lr_mult: 10
  }
  convolution_param {
     num_output: 2
     kernel_size: 1
	 kernel_size: 1
	 kernel_size: 1
	 stride: 1
	 stride: 1
	 stride: 1
	 pad:0
	  pad:0
	 pad:0
   # weight_filler {
      # type: "bilinear"
    # }
	 weight_filler {
       type: "gaussian"
	   std: 0.01
    }
     bias_filler {
       type: "constant"
       value: 0
    }
   }
 }

layer{
name: "deconv2_1x"
  type: "Convolution"
  bottom: "conv3x_top"
  top: "deconv2_1x"
 param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
	kernel_size: 1
	kernel_size: 1
	stride: 1
	stride: 1
	stride: 1
   weight_filler {
      type: "gaussian"
	  std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer{
  name: "drop2_1x"
  type: "Dropout"
  bottom: "deconv2_1x"
  top: "deconv2_1x"
  dropout_param {
    dropout_ratio: 0.5
  }
  }

layer{
name: "deconv3_1x"
  type: "Convolution"
  bottom: "conv4x_top"
  top: "deconv3_1x"
 param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
	kernel_size: 1
	kernel_size: 1
	stride: 1
	stride: 1
	stride: 1
   weight_filler {
      type: "gaussian"
	  std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer{
name: "deconv4_1x"
  type: "Convolution"
  bottom: "conv5x_top"
  top: "deconv4_1x"
 param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
	kernel_size: 1
	kernel_size: 1
	stride: 1
	stride: 1
	stride: 1
   weight_filler {
      type: "gaussian"
	  std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer{
name: "deconv4_2x"
  type: "Deconvolution"
  bottom: "deconv4_1x"
  top: "deconv4_2x"
 param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  convolution_param {
    num_output: 2
    kernel_size: 4
	kernel_size: 4
	kernel_size: 1
	stride: 2
	stride: 2
	stride: 1
	pad:1
	pad:1
	pad:0
   weight_filler {
      type: "bilinear"
    }
  }
}


layer{
name: "deconv_sum_43"
type:  "Eltwise"
bottom:"deconv4_2x"
bottom:"deconv3_1x"
top:"upsample43"
eltwise_param{
operation: SUM
}
}



layer{
name: "upsample43_2x"
  type: "Deconvolution"
  bottom: "upsample43"
  top: "upsample43_2x"
 param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  convolution_param {
    num_output: 2
    kernel_size: 4
	kernel_size: 4
	kernel_size: 1
	stride: 2
	stride: 2
	stride: 1
	pad:1
	pad:1
	pad:0
   weight_filler {
      type: "bilinear"
    }
  }
}


layer{
name: "deconv_sum_432"
type:  "Eltwise"
bottom:"upsample43_2x"
bottom:"deconv2_1x"
top:"upsample432"
eltwise_param{
operation: SUM
}
}


layer{
name: "upsample432_2x"
  type: "Deconvolution"
  bottom: "upsample432"
  top: "upsample432_2x"
 param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  convolution_param {
    num_output: 2
    kernel_size: 4
	kernel_size: 4
	kernel_size: 1
	stride: 2
	stride: 2
	stride: 1
	pad:1
	pad:1
	pad:0
   weight_filler {
      type: "bilinear"
    }
  }
}

layer{
 name: "deconv_sum_4321"
 type:  "Eltwise"
 bottom:"upsample432_2x"
 bottom:"deconv1_1x"
 top:"upsample4321"
 eltwise_param{
 operation: SUM
 }
 }


layer{
name: "upsample4321_2x"
  type: "Deconvolution"
  bottom: "upsample4321"
  top: "upsample4321_2x"
 param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  convolution_param {
    num_output: 2
    kernel_size: 8
	kernel_size: 8
	kernel_size: 1
	stride: 4
	stride: 4
	stride: 1
	pad:2
	pad:2
	pad:0
   weight_filler {
      type: "bilinear"
    }
  }
}









layer {
  name: "fc"
  type: "Convolution"
  bottom: "upsample4321_2x"
  top: "fc"
  param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  convolution_param {
    num_output: 2
	kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc"
  bottom: "label"
  top: "loss"
  loss_param{
  ignore_label:3
  }
label_select_param{
	balance: true
	num_labels: 3
	num_top_label_balance: 2
	reorder_label: false
	class_prob_mapping_file: 'label_weight.prototxt'
	}
}

layer{
     name: "accuracy"
     type: "Accuracy"
     bottom: "fc"
     bottom: "label" 
	 top: "accuracy"
	 accuracy_param{
	 ignore_label:3
	 }
	 include {
    phase: TEST
   }
}




